version: 2

models:
  - name: "trips_prep"
    description: "Trips prepared for analysis"
    config:
      materialized: "view"
    columns:
      - name: user_id
        tests:
          - not_null
          - unique:
              config:
                severity: warn  # Будет показывать предупреждение вместо ошибки
      - name: started_at
        tests:
          - not_null
      - name: finished_at
        tests:
          - not_null
  
  - name: "trips_stat"
    description: "Overall trips statistics"

  - name: "trips_stat_daily"
    description: "Overall trips statistics per day"
    config:
      indexes:
        - columns: ["date"]
  
  - name: "trips_age_daily"
    description: "Daily trips statistics by user age"
    columns:
    - name: "date"
      tests:
        - not_null
    - name: "age"
      tests:
        - not_null
  
  - name: "trips_age_daily_stat"
    description: "Aggregation of daily trips statistics by user age"

  - name: "trips_geom"
    description: "Trips prepared for geometry analysis"
    config:
      materialized: "view"

  - name: "parking_start_stat"
    description: "Trip start parking statistics by 500 m hexagons"

  - name: "parking_finish_stat"
    description: "Trip finish parking statistics by 10 m hexagons"
    
  - name: "trips_users"
    description: "Prepared trips enriched with users data"
    config:
      materialized: "incremental"
      post-hook:
        - "analyze dbt.trips_users"
        - sql: "vacuum dbt.trips_users"
          transaction: false
     
  - name: "events_clean"
    description: "User events without duplicates"
    config:
      materialized: "incremental"
      strategy: "merge"
      unique_key: "user_id, timestamp, type_id"
  
  - name: "trips_concurrency"
    description: "Number of simultaneous rides in time"
    config:
      materialized: "incremental"

  - name: "companies"
    description: "Scooter statistics by company"
  
  - name: "companies_trips"
    description: "Trip statistics by company"
    columns:
      - name: "company"
        description: "Scooters manufacturing company"
        tests:
          - unique

  - name: "events_full"
    description: "User events enriched with meaningful types"
    config:
      materialized: "view"

  - name: "events_stat"
    description: "Overall user events statistics"

  - name: "trips_age_group"
    description: "Overall trips statistics by user age group"

  - name: "sex_age_pivot"
    description: "Trips per age grouped by sex"
    tests:
      - unique:
          column_name: "age"
    columns:
      - name: "age"
        description: "Numerical age of user"
        tests:
          - dbt_utils.not_constant

  - name: "events_stream"
    description: "User events prepared for product analysis"
    config:
      materialized: "ephemeral"

  - name: "book_scooter_retention"
    description: >
      Retention analysis which tells how many people
      started search for scooter and finally booked it on or after
      1, 7, 14 days (or weeks, months, years), etc

  - name: time_spine_daily
    config:
      materialized: "table"
    time_spine:
      standard_granularity_column: date_day
    columns:
      - name: date_day
        granularity: day

  - name: "users_prep"
    description: "Users prepared for analysis without sensitive data"
    config:
      materialized: "view"

  - name: "users_class_weekly_trips"
    description: "User classification based on trips during the week"
    data_tests:
      - unique_key:
          arguments:
            columns: [ "user_id" ]
    columns:
      - name: "regular"
        description: "Regular user, rides at least 3 days a week"
      - name: "fan"
        description: "Enthusiast, uses the service on average at least 6 days a week"

  - name: "users_class_weekly_destination_trips"
    description: "User classification based on trips during the week considering the destination"
    data_tests:
      - unique_key:
          arguments:
            columns: [ "user_id" ]
    columns:
      - name: "to_work"
        description: "Travels to the same place (to work) in the morning at least three times a week"

  - name: "users_class_monthly_trips"
    description: "User classification based on the number of trips per month"
    data_tests:
      - unique_key:
          arguments:
            columns: [ "user_id" ]
    columns:
      - name: "rare"
        description: "infrequent/occasional trips, no more than 2 trips per month"

  - name: "users_class"
    description: >
      Combining all features into a consolidated table.
      Joining with the users table to label each user
    data_tests:
      - unique_key:
          arguments:
            columns: [ "user_id" ]

  - name: "users_class_stat"
    description: >
      Calculation of overall group statistics:
        - number of users in each group
        - total number of users for information and validation

sources:
  - name: "scooters_raw"
    description: "Raw data provided by scooters service"
    loader: "https://t.me/inzhenerka_dbt_bot"
    tables:
      - name: "trips"
        description: "Scooter trips"
        loaded_at_field: "finished_at"
        config:
          freshness:
            warn_after:
              count: 1
              period: "day"
            error_after:
              count: 3650
              period: "day"
        columns:
          - name: "user_id"
            description: "User identifier"
            tests:
              - not_null
              - relationships:
                  to: source('scooters_raw', 'users')
                  field: id

      - name: "users"
        description: "Users of scooter service"
        columns:
          - name: "sex"
            description: "User gender"
            tests:
              - accepted_values:
                  values: ["M", "F"]
              - not_null:
                  config:
                    severity: warn

      - name: "events"
        description: "Raw user events with duplicates"